---
title: "Subgroup analysis"
bibliography: '`r system.file("bibliography.bib", package = "brms.mmrm")`'
csl: '`r system.file("asa.csl", package = "brms.mmrm")`'
output:
  rmarkdown::html_vignette:
    toc: true
    number_sections: true
vignette: >
  %\VignetteIndexEntry{Subgroup analysis}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  fig.width = 7,
  fig.height = 5,
  fig.path = "subgroup/",
  eval = identical(tolower(Sys.getenv("NOT_CRAN", unset = "")), "true")
)
library(brms.mmrm)
library(dplyr)
library(magrittr)
```

This vignette explains how to incorporate a subgroup variable into an MMRM using the `brms.mmrm` package. Here, we assume the subgroup variable has already been selected in advance (perhaps pre-specified in a trial protocol) because interactions are anticipated or of particular interest. Especially if heterogeneous patient populations are studied, it is important to check that the estimated overall effect is broadly applicable to relevant subgroups (@ICH1998, @EMA2019). It is worth noting, however, that subgroup variable selection is a thorough process that requires deep domain knowledge, careful adjustments for multiplicity, and potentially different modeling approaches, all of which belongs outside the scope of this vignette. Limitations of one-variable-at-a-time subgroup analyses to detect treatment effect heterogeneity have been described in the literature [@Kent2023]. For literature on data-driven subgroup identification methods in clinical trials, we refer to @Lipkovich2017 and @Lipkovich2023.

# Data

The subgroup variable must be categorical.

```{r}
library(brms.mmrm)
library(dplyr)
library(magrittr)
set.seed(0L)
raw_data <- brm_simulate_outline(
  n_group = 3,
  n_subgroup = 2,
  n_patient = 50,
  n_time = 3,
  rate_dropout = 0,
  rate_lapse = 0
) |>
  mutate(response = rnorm(n = n()))
  
raw_data
```

Each categorical subgroup level should have adequate representation among all treatment groups at all discrete time points. Otherwise, some marginal means of interest may not be estimable.

```{r}
count(raw_data, group, subgroup, time)
```

When you create the special classed dataset for `brms.mmrm` using `brm_data()`, please supply the name of the subgroup variable and a reference subgroup level. Post-processing functions will use the reference subgroup level to compare pairs of subgroups: for example, the treatment effect of `subgroup_2` minus the treatment effect of the reference subgroup level you choose.

```{r}
data <- brm_data(
  data = raw_data,
  outcome = "response",
  role = "response",
  baseline = NULL,
  group = "group",
  subgroup = "subgroup",
  time = "time",
  patient = "patient",
  reference_group = "group_1",
  reference_subgroup = "subgroup_1",
  reference_time = "time_1"
)

str(data)
```

# Formula

For subgroup analysis, the formula should have terms that include the subgroup variable. All plausible interactions are optional via arguments of `brm_formula()`. For this specific example, we disable all interactions except group-subgroup interaction.

```{r}
formula_subgroup <- brm_formula(
  data = data,
  group_subgroup_time = FALSE,
  subgroup_time = FALSE
)

formula_subgroup
```

To create an analogous non-subgroup reduced model, disable each of the terms that involve the subgroup. This will be useful later on for measuring the impact of the subgroup as a whole, without needing to restrict to a specific level of the subgroup.^[If analyzing change from baseline, you would also need to set `baseline_subgroup = FALSE` and `baseline_subgroup_time = FALSE` in the formula of the reduced model.]

```{r}
formula_reduced <- brm_formula(
  data = data,
  group_subgroup = FALSE,
  group_subgroup_time = FALSE,
  subgroup = FALSE,
  subgroup_time = FALSE
)

formula_reduced
```

# Models

To run the full subgroup and reduced non-subgroup models, use `brm_model()` as usual. Remember to supply the appropriate formula to each case.

```{r}
model_subgroup <- brm_model(
  data = data,
  formula = formula_subgroup,
  refresh = 0
)
```

```{r}
model_reduced <- brm_model(
  data = data,
  formula = formula_reduced,
  refresh = 0
)
```

# Marginals

For the subgroup model, `brm_marginal_draws()` can summarize subgroup-specific and non-subgroup-specific marginal means. The latter is useful for direct comparison with the non-subgroup reduced model.

```{r}
draws_subgroup_specific <- brm_marginal_draws(
  model = model_subgroup,
  data = data,
  use_subgroup = TRUE
)
```

```{r}
draws_subgroup_comparison <- brm_marginal_draws(
  model = model_subgroup,
  data = data,
  use_subgroup = FALSE
)
```

```{r}
draws_reduced <- brm_marginal_draws(
  model = model_reduced,
  data = data,
  use_subgroup = FALSE
)
```

For `draws_subgroup_specific`, the marginals of the time difference (change from baseline) and treatment difference are the same as before, except now they are subgroup-specific.

```{r, paged.print = FALSE}
tibble::as_tibble(draws_subgroup_specific$difference_group)
```

In addition, there is a new `difference_subgroup` table. The posterior samples in `difference_subgroup` measure the differences between each subgroup level and the reference subgroup level with respect to the treatment effects in `difference_group`.

```{r, paged.print = FALSE}
tibble::as_tibble(draws_subgroup_specific$difference_subgroup)
```

The `brm_marginal_summaries()` and `brm_marginal_probabilities()` are automatically aware of any subgroup-specific marginals from `brm_marginal_draws()`. Notably, `brm_marginal_summaries()` summarizes the subgroup differences in the `difference_subgroup` table from `brm_marginal_draws()`.

```{r, paged.print = FALSE}
summaries_subgroup_specific <- brm_marginal_summaries(
  draws_subgroup_specific,
  level = 0.95
)

summaries_subgroup_comparison <- brm_marginal_summaries(
  draws_subgroup_comparison,
  level = 0.95
)

summaries_reduced <- brm_marginal_summaries(
  draws_reduced,
  level = 0.95
)

summaries_subgroup_specific
```

`brm_marginal_probabilities()` still focuses on treatment effects, not on differences between pairs of subgroup levels.

```{r, paged.print = FALSE}
brm_marginal_probabilities(
  draws = draws_subgroup_specific,
  threshold = c(-0.1, 0.1),
  direction = c("greater", "less")
)
```

`brm_marignal_data()` can produce either subgroup-specific or non-subgroup-specific summary statistics.

```{r, paged.print = FALSE}
summaries_data_subgroup <- brm_marginal_data(
  data = data,
  level = 0.95,
  use_subgroup = TRUE
)

summaries_data_subgroup
```

```{r, paged.print = FALSE}
summaries_data_reduced <- brm_marginal_data(
  data = data,
  level = 0.95,
  use_subgroup = FALSE
)

summaries_data_reduced
```

# Model comparison

Metrics from `brms` can compare the full subgroup and reduced non-subgroup model to assess the effect of the subgroup as a whole. We can easily compute the widely applicable information criterion (WAIC) of each model.

```{r}
brms::waic(model_subgroup)
```

```{r}
brms::waic(model_reduced)
```

Likewise, we can compare the models in terms of the expected log predictive density (ELPD) based on approximate Pareto-smoothed leave-one-out cross-validation.

```{r}
loo_subgroup <- brms::loo(model_subgroup)
loo_reduced <- brms::loo(model_reduced)
```

```{r}
loo_subgroup
```

```{r}
loo_reduced
```

```{r}
loo::loo_compare(loo_subgroup, loo_reduced)
```

# Visualization

`brm_plot_draws()` is aware of any subgroup-specific marginal means.

```{r draws}
brm_plot_draws(draws_subgroup_specific$difference_group)
```

You can adjust visual aesthetics to compare subgroup levels side by side if subgroup level is the primary comparison of interest.

```{r drawscustom}
brm_plot_draws(
  draws_subgroup_specific$difference_group,
  axis = "subgroup",
  facet = c("time", "group")
)
```

The following function call compares the subgroup model results against the subgroup data.

```{r subgroup-vs-data}
brm_plot_compare(
  data = summaries_data_subgroup,
  model = summaries_subgroup_specific,
  marginal = "response"
)
```

You can adjust plot aesthetics to view subgroup levels side by side as the primary comparison of interest.

```{r subgroup-vs-data-levels}
brm_plot_compare(
  data = summaries_data_subgroup,
  model = summaries_subgroup_specific,
  marginal = "response",
  compare = "subgroup",
  axis = "time",
  facet = c("group", "source")
)
```

We can also visually compare the treatment effects of the full subgroup and reduced non-subgroup models, marginalizing over subgroup levels in both cases.

```{r reduced-model-comparison}
brm_plot_compare(
  subgroup = summaries_subgroup_comparison,
  reduced = summaries_reduced,
  marginal = "difference_group"
)
```

# References

